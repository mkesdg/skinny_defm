##########################################################################
# scenario-specific settings and settings used in other sections
##########################################################################
[DEFAULT]
scenario_id = 0
base_year = 2010
end_year = 2040
max_age = 100
logFile = "ccModel.log"

# file info (unc path)
basedir = \\sandag.org\home\shared\RES\Users\mke\forecast\skinny_defm
outdir = output

# database table names: need to be here for logging interpolation
survival_grouped_table = input.survival_grouped
rate_table = fcst.rates

[options]
# TODO replace this with a button in GUI later. If don't do it copy 1-year rates
# from input table
calc_rates = True

##########################################################################
# basic setup: should rarely change
##########################################################################
[files]
survival = survival.csv

[database]
# username and password are unnecessary for trusted connections
driver = {SQL Server}
server = pele.sandag.org
database = skinny_defm
trusted = Yes
port = 1433
uid = 
password = 

[sql]
groups = SELECT group_id, ethnicity, sex, group_label
         FROM ref.ethnicity_sex_group

reset_rates = DELETE 
              FROM %(rate_table)s
              WHERE scenario_id = %(scenario_id)s

survival_grouped_in =   SELECT yr, ethnicity, sex, age, surv_rate 
                FROM %(survival_grouped_table)s
                WHERE scenario_id = %(scenario_id)s
                
[columns]
# database column names
survival = surv_rate

# need to handle variable number of age ranges (0-1,1-4,5-9...)
# and different setups for different years (5-year base, 1-year future)
# need to call interpolation stored procedure (and make it dynamic)



##########################################################################
# logging config
##########################################################################
[loggers]
keys=root

[logger_root]
handlers = screen,file
level = DEBUG

[formatters]
keys = simple,complex

[formatter_simple]
format = %(asctime)s - %(name)s - %(levelname)s - %(message)s

[formatter_complex]
format = %(asctime)s - %(name)s - %(levelname)s - %(module)s : %(lineno)d - %(message)s

[handlers]
keys = file,screen

[handler_file]
class = FileHandler
formatter = complex
level = DEBUG
args = (%(logFile)s,"a")

[handler_screen]
class = StreamHandler
formatter = simple
level = INFO
args = (sys.stdout,)
